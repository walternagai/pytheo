import time
import streamlit as st
from langchain_openai.chat_models import ChatOpenAI

def stream_data(response):
    """
    Gera um stream de dados a partir de uma resposta.
    Par√¢metros:
    - response: str - Resposta a ser processada.
    """
    for word in response.split(" "):
        yield word + " "
        time.sleep(0.02)

def generate_response_openai(api_key, model, prompt):
    model = ChatOpenAI(model=model,
                       api_key=api_key,
                       max_tokens=1000, 
                       temperature=0.7)
    messages = [
        ("system", 
            """
                Voc√™ √© o Pytheo, um assistente virtual que ajuda a aprender a linguagem Python.
                Seu n√≠vel de conhecimento √© intermedi√°rio e voc√™ s√≥ deve responder perguntas sobre Python. 
                A sua resposta deve ser objetiva e clara.
                Evite escrever respostas longas e complexas. 
                Evite grandes sequ√™ncias de c√≥digo, mas caso isso seja necess√°rio, divida em partes menores.
                Ajude o usu√°rio a entender o problema e a solu√ß√£o de forma simples e direta.
                Caso seja necess√°rio, pe√ßa mais informa√ß√µes para o usu√°rio.
                Utilize exemplos pr√°ticos e reais para ilustrar a solu√ß√£o.
                Utilize links de refer√™ncia para que o usu√°rio possa se aprofundar no assunto.
                Caso escreva um c√≥digo, utilize uma fun√ß√£o main() para que o usu√°rio possa testar o c√≥digo.
                Se o usu√°rio solicitar por outra solu√ß√£o, forne√ßa uma resposta alternativa mais simples.
                Seja sempre educado e respeitoso.
                N√£o forne√ßa respostas que envolvam pr√°ticas ilegais, anti√©ticas ou que violem direitos autorais.
                N√£o forne√ßa respostas que envolvam hacking, cracking ou qualquer forma de invas√£o de sistemas.
                N√£o forne√ßa respostas que envolvam manipula√ß√£o de dados pessoais ou sens√≠veis.
                N√£o forne√ßa respostas que envolvam atividades maliciosas ou prejudiciais.
            """
        ),
        ("user", prompt)
    ]
    response = model.invoke(messages)
    return response.content

def main():    
    # importe o arquivo de configura√ß√£o em formato TOML
    api_key = st.secrets.pytheo.OPENAI_API_KEY
    model = st.secrets.pytheo.MODEL

    st.title("ü¶ú Pytheo")

    st.write("Pytheo √© um assistente virtual que te ajuda a aprender Python de forma simples e objetiva.")

    st.markdown("### Hist√≥rico do Chat")

    if "messages" not in st.session_state:
        st.session_state.messages = []
    
    # Exibe mensagens do hist√≥rico
    for message in st.session_state.messages:
        with st.chat_message(message["role"]):
            st.markdown(message["content"])

    question = st.chat_input("Escreva sua d√∫vida da linguagem Python:")

    if question:
        st.session_state.messages.append({"role": "user", "content": question})
        with st.chat_message("user"):
            st.markdown(question)

        response_container = st.chat_message("assistant")
        response_text = response_container.empty()

        response_text.markdown("ü¶ú Pytheo est√° pensando...")

        response = generate_response_openai(api_key, model, question)
        
        full_response = ""
        # fazer um stream da resposta
        for partial_response in stream_data(response):
            full_response += str(partial_response)
            response_text.markdown(full_response + "|")

        # Salva a resposta completa no hist√≥rico
        st.session_state.messages.append({"role": "assistant", "content": response})

if __name__ == "__main__":
    main()
